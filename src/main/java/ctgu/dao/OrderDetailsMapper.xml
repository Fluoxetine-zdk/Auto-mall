<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ctgu.dao.OrderDetailsMapper">
  <resultMap id="BaseResultMap" type="ctgu.entity.OrderDetails">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="ISBN" jdbcType="VARCHAR" property="isbn" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="prices" jdbcType="REAL" property="prices" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, ISBN, number, status, prices
  </sql>
  <select id="selectByExample" parameterType="ctgu.entity.OrderDetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_details
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_details
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="ctgu.entity.OrderDetails">
    insert into order_details (id, order_id, ISBN, 
      number, status, prices
      )
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{isbn,jdbcType=VARCHAR}, 
      #{number,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{prices,jdbcType=REAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="ctgu.entity.OrderDetails">
    insert into order_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="isbn != null">
        ISBN,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="prices != null">
        prices,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="isbn != null">
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="prices != null">
        #{prices,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="ctgu.entity.OrderDetails">
    update order_details
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="isbn != null">
        ISBN = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="prices != null">
        prices = #{prices,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ctgu.entity.OrderDetails">
    update order_details
    set order_id = #{orderId,jdbcType=INTEGER},
      ISBN = #{isbn,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      prices = #{prices,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="ctgu.entity.OrderDetails">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="ISBN" jdbcType="VARCHAR" property="isbn" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="prices" jdbcType="REAL" property="prices" />
    <result column="deliver_number" jdbcType="INTEGER" property="deliverNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, ISBN, number, status, prices, deliver_number
  </sql>
  <select id="selectByExample" parameterType="ctgu.entity.OrderDetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_details
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_details
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="ctgu.entity.OrderDetails">
    insert into order_details (id, order_id, ISBN, 
      number, status, prices, 
      deliver_number)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{isbn,jdbcType=VARCHAR}, 
      #{number,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{prices,jdbcType=REAL}, 
      #{deliverNumber,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="ctgu.entity.OrderDetails">
    insert into order_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="isbn != null">
        ISBN,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="prices != null">
        prices,
      </if>
      <if test="deliverNumber != null">
        deliver_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="isbn != null">
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="prices != null">
        #{prices,jdbcType=REAL},
      </if>
      <if test="deliverNumber != null">
        #{deliverNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="ctgu.entity.OrderDetails">
    update order_details
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="isbn != null">
        ISBN = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="prices != null">
        prices = #{prices,jdbcType=REAL},
      </if>
      <if test="deliverNumber != null">
        deliver_number = #{deliverNumber,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ctgu.entity.OrderDetails">
    update order_details
    set order_id = #{orderId,jdbcType=INTEGER},
      ISBN = #{isbn,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      prices = #{prices,jdbcType=REAL},
      deliver_number = #{deliverNumber,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="ctgu.entity.OrderDetails">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="carid" jdbcType="INTEGER" property="carid" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, number, carid, order_id
  </sql>
  <select id="selectByExample" parameterType="ctgu.entity.OrderDetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_details
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_details
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="ctgu.entity.OrderDetails">
    insert into order_details (id, number, carid, 
      order_id)
    values (#{id,jdbcType=INTEGER}, #{number,jdbcType=INTEGER}, #{carid,jdbcType=INTEGER}, 
      #{orderId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="ctgu.entity.OrderDetails">
    insert into order_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="carid != null">
        carid,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="carid != null">
        #{carid,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="ctgu.entity.OrderDetails">
    update order_details
    <set>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="carid != null">
        carid = #{carid,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ctgu.entity.OrderDetails">
    update order_details
    set number = #{number,jdbcType=INTEGER},
      carid = #{carid,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>